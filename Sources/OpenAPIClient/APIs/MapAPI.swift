//
// MapAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class MapAPI {

    /**

     - parameter fileCreatedAfter: (query)  (optional)
     - parameter fileCreatedBefore: (query)  (optional)
     - parameter isArchived: (query)  (optional)
     - parameter isFavorite: (query)  (optional)
     - parameter withPartners: (query)  (optional)
     - parameter withSharedAlbums: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: [MapMarkerResponseDto]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getMapMarkers(fileCreatedAfter: Date? = nil, fileCreatedBefore: Date? = nil, isArchived: Bool? = nil, isFavorite: Bool? = nil, withPartners: Bool? = nil, withSharedAlbums: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> [MapMarkerResponseDto] {
        return try await getMapMarkersWithRequestBuilder(fileCreatedAfter: fileCreatedAfter, fileCreatedBefore: fileCreatedBefore, isArchived: isArchived, isFavorite: isFavorite, withPartners: withPartners, withSharedAlbums: withSharedAlbums, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /map/markers
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter fileCreatedAfter: (query)  (optional)
     - parameter fileCreatedBefore: (query)  (optional)
     - parameter isArchived: (query)  (optional)
     - parameter isFavorite: (query)  (optional)
     - parameter withPartners: (query)  (optional)
     - parameter withSharedAlbums: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[MapMarkerResponseDto]> 
     */
    open class func getMapMarkersWithRequestBuilder(fileCreatedAfter: Date? = nil, fileCreatedBefore: Date? = nil, isArchived: Bool? = nil, isFavorite: Bool? = nil, withPartners: Bool? = nil, withSharedAlbums: Bool? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<[MapMarkerResponseDto]> {
        let localVariablePath = "/map/markers"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fileCreatedAfter": (wrappedValue: fileCreatedAfter?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "fileCreatedBefore": (wrappedValue: fileCreatedBefore?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "isArchived": (wrappedValue: isArchived?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "isFavorite": (wrappedValue: isFavorite?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "withPartners": (wrappedValue: withPartners?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "withSharedAlbums": (wrappedValue: withSharedAlbums?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[MapMarkerResponseDto]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter lat: (query)  
     - parameter lon: (query)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: [MapReverseGeocodeResponseDto]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func reverseGeocode(lat: Double, lon: Double, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> [MapReverseGeocodeResponseDto] {
        return try await reverseGeocodeWithRequestBuilder(lat: lat, lon: lon, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /map/reverse-geocode
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter lat: (query)  
     - parameter lon: (query)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[MapReverseGeocodeResponseDto]> 
     */
    open class func reverseGeocodeWithRequestBuilder(lat: Double, lon: Double, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<[MapReverseGeocodeResponseDto]> {
        let localVariablePath = "/map/reverse-geocode"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "lat": (wrappedValue: lat.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
            "lon": (wrappedValue: lon.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[MapReverseGeocodeResponseDto]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
