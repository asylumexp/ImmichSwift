//
// SystemConfigAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class SystemConfigAPI {

    /**

     - parameter apiConfiguration: The configuration for the http request.
     - returns: SystemConfigDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getConfig(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> SystemConfigDto {
        return try await getConfigWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /system-config
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<SystemConfigDto> 
     */
    open class func getConfigWithRequestBuilder(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<SystemConfigDto> {
        let localVariablePath = "/system-config"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SystemConfigDto>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter apiConfiguration: The configuration for the http request.
     - returns: SystemConfigDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getConfigDefaults(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> SystemConfigDto {
        return try await getConfigDefaultsWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /system-config/defaults
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<SystemConfigDto> 
     */
    open class func getConfigDefaultsWithRequestBuilder(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<SystemConfigDto> {
        let localVariablePath = "/system-config/defaults"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SystemConfigDto>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter apiConfiguration: The configuration for the http request.
     - returns: SystemConfigTemplateStorageOptionDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getStorageTemplateOptions(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> SystemConfigTemplateStorageOptionDto {
        return try await getStorageTemplateOptionsWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /system-config/storage-template-options
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<SystemConfigTemplateStorageOptionDto> 
     */
    open class func getStorageTemplateOptionsWithRequestBuilder(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<SystemConfigTemplateStorageOptionDto> {
        let localVariablePath = "/system-config/storage-template-options"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SystemConfigTemplateStorageOptionDto>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter systemConfigDto: (body)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: SystemConfigDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func updateConfig(systemConfigDto: SystemConfigDto, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> SystemConfigDto {
        return try await updateConfigWithRequestBuilder(systemConfigDto: systemConfigDto, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - PUT /system-config
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter systemConfigDto: (body)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<SystemConfigDto> 
     */
    open class func updateConfigWithRequestBuilder(systemConfigDto: SystemConfigDto, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<SystemConfigDto> {
        let localVariablePath = "/system-config"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: systemConfigDto, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SystemConfigDto>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
