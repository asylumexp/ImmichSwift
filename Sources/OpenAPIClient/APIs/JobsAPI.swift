//
// JobsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class JobsAPI {

    /**

     - parameter jobCreateDto: (body)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func createJob(jobCreateDto: JobCreateDto, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await createJobWithRequestBuilder(jobCreateDto: jobCreateDto, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - POST /jobs
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter jobCreateDto: (body)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func createJobWithRequestBuilder(jobCreateDto: JobCreateDto, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<Void> {
        let localVariablePath = "/jobs"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: jobCreateDto, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter apiConfiguration: The configuration for the http request.
     - returns: AllJobStatusResponseDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getAllJobsStatus(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> AllJobStatusResponseDto {
        return try await getAllJobsStatusWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /jobs
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<AllJobStatusResponseDto> 
     */
    open class func getAllJobsStatusWithRequestBuilder(apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<AllJobStatusResponseDto> {
        let localVariablePath = "/jobs"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AllJobStatusResponseDto>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter id: (path)  
     - parameter jobCommandDto: (body)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: JobStatusDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func sendJobCommand(id: JobName, jobCommandDto: JobCommandDto, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> JobStatusDto {
        return try await sendJobCommandWithRequestBuilder(id: id, jobCommandDto: jobCommandDto, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - PUT /jobs/{id}
     - API Key:
       - type: apiKey immich_access_token 
       - name: cookie
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: api_key
     - Bearer Token:
       - type: http
       - name: bearer
     - parameter id: (path)  
     - parameter jobCommandDto: (body)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<JobStatusDto> 
     */
    open class func sendJobCommandWithRequestBuilder(id: JobName, jobCommandDto: JobCommandDto, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<JobStatusDto> {
        var localVariablePath = "/jobs/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: jobCommandDto, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<JobStatusDto>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
