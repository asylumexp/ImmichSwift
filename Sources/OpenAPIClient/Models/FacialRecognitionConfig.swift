//
// FacialRecognitionConfig.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct FacialRecognitionConfig: Sendable, Codable, ParameterConvertible, Hashable {

    public static let maxDistanceRule = NumericRule<Double>(minimum: 0.1, exclusiveMinimum: false, maximum: 2, exclusiveMaximum: false, multipleOf: nil)
    public static let minFacesRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public static let minScoreRule = NumericRule<Double>(minimum: 0.1, exclusiveMinimum: false, maximum: 1, exclusiveMaximum: false, multipleOf: nil)
    public var enabled: Bool
    public var maxDistance: Double
    public var minFaces: Int
    public var minScore: Double
    public var modelName: String

    public init(enabled: Bool, maxDistance: Double, minFaces: Int, minScore: Double, modelName: String) {
        self.enabled = enabled
        self.maxDistance = maxDistance
        self.minFaces = minFaces
        self.minScore = minScore
        self.modelName = modelName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case enabled
        case maxDistance
        case minFaces
        case minScore
        case modelName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(enabled, forKey: .enabled)
        try container.encode(maxDistance, forKey: .maxDistance)
        try container.encode(minFaces, forKey: .minFaces)
        try container.encode(minScore, forKey: .minScore)
        try container.encode(modelName, forKey: .modelName)
    }
}

