//
// SystemConfigSmtpTransportDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct SystemConfigSmtpTransportDto: Sendable, Codable, ParameterConvertible, Hashable {

    public static let portRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: false, maximum: 65535, exclusiveMaximum: false, multipleOf: nil)
    public var host: String
    public var ignoreCert: Bool
    public var password: String
    public var port: Double
    public var username: String

    public init(host: String, ignoreCert: Bool, password: String, port: Double, username: String) {
        self.host = host
        self.ignoreCert = ignoreCert
        self.password = password
        self.port = port
        self.username = username
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case host
        case ignoreCert
        case password
        case port
        case username
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(host, forKey: .host)
        try container.encode(ignoreCert, forKey: .ignoreCert)
        try container.encode(password, forKey: .password)
        try container.encode(port, forKey: .port)
        try container.encode(username, forKey: .username)
    }
}

