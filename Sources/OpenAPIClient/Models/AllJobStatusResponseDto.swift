//
// AllJobStatusResponseDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct AllJobStatusResponseDto: Sendable, Codable, ParameterConvertible, Hashable {

    public var backgroundTask: JobStatusDto
    public var backupDatabase: JobStatusDto
    public var duplicateDetection: JobStatusDto
    public var faceDetection: JobStatusDto
    public var facialRecognition: JobStatusDto
    public var library: JobStatusDto
    public var metadataExtraction: JobStatusDto
    public var migration: JobStatusDto
    public var notifications: JobStatusDto
    public var search: JobStatusDto
    public var sidecar: JobStatusDto
    public var smartSearch: JobStatusDto
    public var storageTemplateMigration: JobStatusDto
    public var thumbnailGeneration: JobStatusDto
    public var videoConversion: JobStatusDto

    public init(backgroundTask: JobStatusDto, backupDatabase: JobStatusDto, duplicateDetection: JobStatusDto, faceDetection: JobStatusDto, facialRecognition: JobStatusDto, library: JobStatusDto, metadataExtraction: JobStatusDto, migration: JobStatusDto, notifications: JobStatusDto, search: JobStatusDto, sidecar: JobStatusDto, smartSearch: JobStatusDto, storageTemplateMigration: JobStatusDto, thumbnailGeneration: JobStatusDto, videoConversion: JobStatusDto) {
        self.backgroundTask = backgroundTask
        self.backupDatabase = backupDatabase
        self.duplicateDetection = duplicateDetection
        self.faceDetection = faceDetection
        self.facialRecognition = facialRecognition
        self.library = library
        self.metadataExtraction = metadataExtraction
        self.migration = migration
        self.notifications = notifications
        self.search = search
        self.sidecar = sidecar
        self.smartSearch = smartSearch
        self.storageTemplateMigration = storageTemplateMigration
        self.thumbnailGeneration = thumbnailGeneration
        self.videoConversion = videoConversion
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case backgroundTask
        case backupDatabase
        case duplicateDetection
        case faceDetection
        case facialRecognition
        case library
        case metadataExtraction
        case migration
        case notifications
        case search
        case sidecar
        case smartSearch
        case storageTemplateMigration
        case thumbnailGeneration
        case videoConversion
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(backgroundTask, forKey: .backgroundTask)
        try container.encode(backupDatabase, forKey: .backupDatabase)
        try container.encode(duplicateDetection, forKey: .duplicateDetection)
        try container.encode(faceDetection, forKey: .faceDetection)
        try container.encode(facialRecognition, forKey: .facialRecognition)
        try container.encode(library, forKey: .library)
        try container.encode(metadataExtraction, forKey: .metadataExtraction)
        try container.encode(migration, forKey: .migration)
        try container.encode(notifications, forKey: .notifications)
        try container.encode(search, forKey: .search)
        try container.encode(sidecar, forKey: .sidecar)
        try container.encode(smartSearch, forKey: .smartSearch)
        try container.encode(storageTemplateMigration, forKey: .storageTemplateMigration)
        try container.encode(thumbnailGeneration, forKey: .thumbnailGeneration)
        try container.encode(videoConversion, forKey: .videoConversion)
    }
}

