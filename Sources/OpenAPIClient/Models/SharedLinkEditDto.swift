//
// SharedLinkEditDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct SharedLinkEditDto: Sendable, Codable, ParameterConvertible, Hashable {

    public var allowDownload: Bool?
    public var allowUpload: Bool?
    /** Few clients cannot send null to set the expiryTime to never. Setting this flag and not sending expiryAt is considered as null instead. Clients that can send null values can ignore this. */
    public var changeExpiryTime: Bool?
    public var description: String?
    public var expiresAt: Date?
    public var password: String?
    public var showMetadata: Bool?

    public init(allowDownload: Bool? = nil, allowUpload: Bool? = nil, changeExpiryTime: Bool? = nil, description: String? = nil, expiresAt: Date? = nil, password: String? = nil, showMetadata: Bool? = nil) {
        self.allowDownload = allowDownload
        self.allowUpload = allowUpload
        self.changeExpiryTime = changeExpiryTime
        self.description = description
        self.expiresAt = expiresAt
        self.password = password
        self.showMetadata = showMetadata
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case allowDownload
        case allowUpload
        case changeExpiryTime
        case description
        case expiresAt
        case password
        case showMetadata
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(allowDownload, forKey: .allowDownload)
        try container.encodeIfPresent(allowUpload, forKey: .allowUpload)
        try container.encodeIfPresent(changeExpiryTime, forKey: .changeExpiryTime)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(expiresAt, forKey: .expiresAt)
        try container.encodeIfPresent(password, forKey: .password)
        try container.encodeIfPresent(showMetadata, forKey: .showMetadata)
    }
}

