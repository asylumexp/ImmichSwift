//
// UsageByUserDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct UsageByUserDto: Sendable, Codable, ParameterConvertible, Hashable {

    public var photos: Int
    public var quotaSizeInBytes: Int64?
    public var usage: Int64
    public var usagePhotos: Int64
    public var usageVideos: Int64
    public var userId: String
    public var userName: String
    public var videos: Int

    public init(photos: Int, quotaSizeInBytes: Int64?, usage: Int64, usagePhotos: Int64, usageVideos: Int64, userId: String, userName: String, videos: Int) {
        self.photos = photos
        self.quotaSizeInBytes = quotaSizeInBytes
        self.usage = usage
        self.usagePhotos = usagePhotos
        self.usageVideos = usageVideos
        self.userId = userId
        self.userName = userName
        self.videos = videos
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case photos
        case quotaSizeInBytes
        case usage
        case usagePhotos
        case usageVideos
        case userId
        case userName
        case videos
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(photos, forKey: .photos)
        try container.encode(quotaSizeInBytes, forKey: .quotaSizeInBytes)
        try container.encode(usage, forKey: .usage)
        try container.encode(usagePhotos, forKey: .usagePhotos)
        try container.encode(usageVideos, forKey: .usageVideos)
        try container.encode(userId, forKey: .userId)
        try container.encode(userName, forKey: .userName)
        try container.encode(videos, forKey: .videos)
    }
}

