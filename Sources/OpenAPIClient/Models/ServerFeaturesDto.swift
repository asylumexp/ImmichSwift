//
// ServerFeaturesDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ServerFeaturesDto: Sendable, Codable, ParameterConvertible, Hashable {

    public var configFile: Bool
    public var duplicateDetection: Bool
    public var email: Bool
    public var facialRecognition: Bool
    public var importFaces: Bool
    public var map: Bool
    public var oauth: Bool
    public var oauthAutoLaunch: Bool
    public var passwordLogin: Bool
    public var reverseGeocoding: Bool
    public var search: Bool
    public var sidecar: Bool
    public var smartSearch: Bool
    public var trash: Bool

    public init(configFile: Bool, duplicateDetection: Bool, email: Bool, facialRecognition: Bool, importFaces: Bool, map: Bool, oauth: Bool, oauthAutoLaunch: Bool, passwordLogin: Bool, reverseGeocoding: Bool, search: Bool, sidecar: Bool, smartSearch: Bool, trash: Bool) {
        self.configFile = configFile
        self.duplicateDetection = duplicateDetection
        self.email = email
        self.facialRecognition = facialRecognition
        self.importFaces = importFaces
        self.map = map
        self.oauth = oauth
        self.oauthAutoLaunch = oauthAutoLaunch
        self.passwordLogin = passwordLogin
        self.reverseGeocoding = reverseGeocoding
        self.search = search
        self.sidecar = sidecar
        self.smartSearch = smartSearch
        self.trash = trash
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case configFile
        case duplicateDetection
        case email
        case facialRecognition
        case importFaces
        case map
        case oauth
        case oauthAutoLaunch
        case passwordLogin
        case reverseGeocoding
        case search
        case sidecar
        case smartSearch
        case trash
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(configFile, forKey: .configFile)
        try container.encode(duplicateDetection, forKey: .duplicateDetection)
        try container.encode(email, forKey: .email)
        try container.encode(facialRecognition, forKey: .facialRecognition)
        try container.encode(importFaces, forKey: .importFaces)
        try container.encode(map, forKey: .map)
        try container.encode(oauth, forKey: .oauth)
        try container.encode(oauthAutoLaunch, forKey: .oauthAutoLaunch)
        try container.encode(passwordLogin, forKey: .passwordLogin)
        try container.encode(reverseGeocoding, forKey: .reverseGeocoding)
        try container.encode(search, forKey: .search)
        try container.encode(sidecar, forKey: .sidecar)
        try container.encode(smartSearch, forKey: .smartSearch)
        try container.encode(trash, forKey: .trash)
    }
}

