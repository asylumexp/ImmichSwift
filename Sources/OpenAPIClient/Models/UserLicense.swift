//
// UserLicense.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct UserLicense: Sendable, Codable, ParameterConvertible, Hashable {

    public var activatedAt: Date
    public var activationKey: String
    public var licenseKey: String

    public init(activatedAt: Date, activationKey: String, licenseKey: String) {
        self.activatedAt = activatedAt
        self.activationKey = activationKey
        self.licenseKey = licenseKey
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case activatedAt
        case activationKey
        case licenseKey
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(activatedAt, forKey: .activatedAt)
        try container.encode(activationKey, forKey: .activationKey)
        try container.encode(licenseKey, forKey: .licenseKey)
    }
}

