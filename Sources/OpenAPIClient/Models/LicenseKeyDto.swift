//
// LicenseKeyDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct LicenseKeyDto: Sendable, Codable, ParameterConvertible, Hashable {

    public static let licenseKeyRule = StringRule(minLength: nil, maxLength: nil, pattern: "/IM(SV|CL)(-[\\dA-Za-z]{4}){8}/")
    public var activationKey: String
    public var licenseKey: String

    public init(activationKey: String, licenseKey: String) {
        self.activationKey = activationKey
        self.licenseKey = licenseKey
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case activationKey
        case licenseKey
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(activationKey, forKey: .activationKey)
        try container.encode(licenseKey, forKey: .licenseKey)
    }
}

