//
// CreateLibraryDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct CreateLibraryDto: Sendable, Codable, ParameterConvertible, Hashable {

    public static let exclusionPatternsRule = ArrayRule(minItems: nil, maxItems: 128, uniqueItems: true)
    public static let importPathsRule = ArrayRule(minItems: nil, maxItems: 128, uniqueItems: true)
    public var exclusionPatterns: Set<String>?
    public var importPaths: Set<String>?
    public var name: String?
    public var ownerId: UUID

    public init(exclusionPatterns: Set<String>? = nil, importPaths: Set<String>? = nil, name: String? = nil, ownerId: UUID) {
        self.exclusionPatterns = exclusionPatterns
        self.importPaths = importPaths
        self.name = name
        self.ownerId = ownerId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case exclusionPatterns
        case importPaths
        case name
        case ownerId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(exclusionPatterns, forKey: .exclusionPatterns)
        try container.encodeIfPresent(importPaths, forKey: .importPaths)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encode(ownerId, forKey: .ownerId)
    }
}

