//
// DatabaseBackupConfig.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct DatabaseBackupConfig: Sendable, Codable, ParameterConvertible, Hashable {

    public static let keepLastAmountRule = NumericRule<Double>(minimum: 1, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public var cronExpression: String
    public var enabled: Bool
    public var keepLastAmount: Double

    public init(cronExpression: String, enabled: Bool, keepLastAmount: Double) {
        self.cronExpression = cronExpression
        self.enabled = enabled
        self.keepLastAmount = keepLastAmount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case cronExpression
        case enabled
        case keepLastAmount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(cronExpression, forKey: .cronExpression)
        try container.encode(enabled, forKey: .enabled)
        try container.encode(keepLastAmount, forKey: .keepLastAmount)
    }
}

