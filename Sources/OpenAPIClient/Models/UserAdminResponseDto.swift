//
// UserAdminResponseDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct UserAdminResponseDto: Sendable, Codable, ParameterConvertible, Hashable {

    public var avatarColor: UserAvatarColor
    public var createdAt: Date
    public var deletedAt: Date?
    public var email: String
    public var id: String
    public var isAdmin: Bool
    public var license: UserLicense?
    public var name: String
    public var oauthId: String
    public var profileChangedAt: Date
    public var profileImagePath: String
    public var quotaSizeInBytes: Int64?
    public var quotaUsageInBytes: Int64?
    public var shouldChangePassword: Bool
    public var status: UserStatus
    public var storageLabel: String?
    public var updatedAt: Date

    public init(avatarColor: UserAvatarColor, createdAt: Date, deletedAt: Date?, email: String, id: String, isAdmin: Bool, license: UserLicense?, name: String, oauthId: String, profileChangedAt: Date, profileImagePath: String, quotaSizeInBytes: Int64?, quotaUsageInBytes: Int64?, shouldChangePassword: Bool, status: UserStatus, storageLabel: String?, updatedAt: Date) {
        self.avatarColor = avatarColor
        self.createdAt = createdAt
        self.deletedAt = deletedAt
        self.email = email
        self.id = id
        self.isAdmin = isAdmin
        self.license = license
        self.name = name
        self.oauthId = oauthId
        self.profileChangedAt = profileChangedAt
        self.profileImagePath = profileImagePath
        self.quotaSizeInBytes = quotaSizeInBytes
        self.quotaUsageInBytes = quotaUsageInBytes
        self.shouldChangePassword = shouldChangePassword
        self.status = status
        self.storageLabel = storageLabel
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case avatarColor
        case createdAt
        case deletedAt
        case email
        case id
        case isAdmin
        case license
        case name
        case oauthId
        case profileChangedAt
        case profileImagePath
        case quotaSizeInBytes
        case quotaUsageInBytes
        case shouldChangePassword
        case status
        case storageLabel
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(avatarColor, forKey: .avatarColor)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(deletedAt, forKey: .deletedAt)
        try container.encode(email, forKey: .email)
        try container.encode(id, forKey: .id)
        try container.encode(isAdmin, forKey: .isAdmin)
        try container.encode(license, forKey: .license)
        try container.encode(name, forKey: .name)
        try container.encode(oauthId, forKey: .oauthId)
        try container.encode(profileChangedAt, forKey: .profileChangedAt)
        try container.encode(profileImagePath, forKey: .profileImagePath)
        try container.encode(quotaSizeInBytes, forKey: .quotaSizeInBytes)
        try container.encode(quotaUsageInBytes, forKey: .quotaUsageInBytes)
        try container.encode(shouldChangePassword, forKey: .shouldChangePassword)
        try container.encode(status, forKey: .status)
        try container.encode(storageLabel, forKey: .storageLabel)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension UserAdminResponseDto: Identifiable {}
